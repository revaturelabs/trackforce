package com.revature.entity;
// Generated Nov 7, 2017 9:24:46 PM by Hibernate Tools 5.2.5.Final



import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TfClient generated by hbm2java
 */
@Entity
@Table(name = "TF_CLIENT", schema = "ADMIN")
public class TfClient implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3153069785231904041L;
	private Integer tfClientId;
	private String tfClientName;
	private Set<TfPlacement> tfPlacements = new HashSet<TfPlacement>(0);
	private Set<TfAssociate> tfAssociates = new HashSet<TfAssociate>(0);
	private Set<TfInterview> tfInterviews = new HashSet<TfInterview>(0);

	public TfClient() {
	}

	public TfClient(Integer tfClientId) {
		this.tfClientId = tfClientId;
	}

	public TfClient(Integer tfClientId, String tfClientName, Set<TfPlacement> tfPlacements,
			Set<TfAssociate> tfAssociates, Set<TfInterview> tfInterviews) {
		this.tfClientId = tfClientId;
		this.tfClientName = tfClientName;
		this.tfPlacements = tfPlacements;
		this.tfAssociates = tfAssociates;
		this.tfInterviews = tfInterviews;
	}

	@Id

	@Column(name = "TF_CLIENT_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getTfClientId() {
		return this.tfClientId;
	}

	public void setTfClientId(Integer tfClientId) {
		this.tfClientId = tfClientId;
	}

	@Column(name = "TF_CLIENT_NAME", length = 100)
	public String getTfClientName() {
		return this.tfClientName;
	}

	public void setTfClientName(String tfClientName) {
		this.tfClientName = tfClientName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tfClient")
	public Set<TfPlacement> getTfPlacements() {
		return this.tfPlacements;
	}

	public void setTfPlacements(Set<TfPlacement> tfPlacements) {
		this.tfPlacements = tfPlacements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tfClient")
	public Set<TfAssociate> getTfAssociates() {
		return this.tfAssociates;
	}

	public void setTfAssociates(Set<TfAssociate> tfAssociates) {
		this.tfAssociates = tfAssociates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tfClient")
	public Set<TfInterview> getTfInterviews() {
		return this.tfInterviews;
	}

	public void setTfInterviews(Set<TfInterview> tfInterviews) {
		this.tfInterviews = tfInterviews;
	}

    @Override
    public String toString() {
        return "TfClient [tfClientId=" + tfClientId + ", tfClientName=" + tfClientName + "]";
    }
	
}
