package com.revature.entity;
// Generated Nov 7, 2017 9:24:46 PM by Hibernate Tools 5.2.5.Final

import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TfInterview generated by hbm2java
 */
@Entity
@Table(name = "TF_INTERVIEW", schema = "ADMIN")
public class TfInterview implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4148475604579144144L;
	private Integer tfInterviewId;
	private TfAssociate tfAssociate;
	private TfClient tfClient;
	private TfEndClient tfEndClient;
	private TfInterviewType tfInterviewType;
	private Timestamp tfInterviewDate;
	private String tfInterviewFeedback;

	public TfInterview() {
	}

	public TfInterview(Integer tfInterviewId) {
		this.tfInterviewId = tfInterviewId;
	}

	public TfInterview(Integer tfInterviewId, TfAssociate tfAssociate, TfClient tfClient, TfEndClient tfEndClient,
			TfInterviewType tfInterviewType, Timestamp tfInterviewDate, String tfInterviewFeedback) {
		this.tfInterviewId = tfInterviewId;
		this.tfAssociate = tfAssociate;
		this.tfClient = tfClient;
		this.tfEndClient = tfEndClient;
		this.tfInterviewType = tfInterviewType;
		this.tfInterviewDate = tfInterviewDate;
		this.tfInterviewFeedback = tfInterviewFeedback;
	}

	@Id
	@Column(name = "TF_INTERVIEW_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getTfInterviewId() {
		return this.tfInterviewId;
	}

	public void setTfInterviewId(Integer tfInterviewId) {
		this.tfInterviewId = tfInterviewId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TF_ASSOCIATE_ID")
	public TfAssociate getTfAssociate() {
		return this.tfAssociate;
	}

	public void setTfAssociate(TfAssociate tfAssociate) {
		this.tfAssociate = tfAssociate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TF_CLIENT_ID")
	public TfClient getTfClient() {
		return this.tfClient;
	}

	public void setTfClient(TfClient tfClient) {
		this.tfClient = tfClient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TF_END_CLIENT_ID")
	public TfEndClient getTfEndClient() {
		return this.tfEndClient;
	}

	public void setTfEndClient(TfEndClient tfEndClient) {
		this.tfEndClient = tfEndClient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TF_INTERVIEW_TYPE_ID")
	public TfInterviewType getTfInterviewType() {
		return this.tfInterviewType;
	}

	public void setTfInterviewType(TfInterviewType tfInterviewType) {
		this.tfInterviewType = tfInterviewType;
	}

	@Column(name = "TF_INTERVIEW_DATE")
	public Timestamp getTfInterviewDate() {
		return this.tfInterviewDate;
	}

	public void setTfInterviewDate(Timestamp tfInterviewDate) {
		this.tfInterviewDate = tfInterviewDate;
	}

	@Column(name = "TF_INTERVIEW_FEEDBACK", length = 2000)
	public String getTfInterviewFeedback() {
		return this.tfInterviewFeedback;
	}

	public void setTfInterviewFeedback(String tfInterviewFeedback) {
		this.tfInterviewFeedback = tfInterviewFeedback;
	}
	
	public void setTfEndClientName(String name) {
		this.tfEndClient.setTfEndClientName(name);
	}

}
