package com.revature.entity;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * TfUser generated by hbm2java
 */
@XmlRootElement
@Entity
@Table(name = "TF_USER", schema="ADMIN")
public class TfUser implements java.io.Serializable {

    private static final long serialVersionUID = 706405344864879997L;
    @Id
    @Column(name = "TF_USER_ID")
    /* ID's 1-14 are reserved for manual insertion */
    @SequenceGenerator(sequenceName = "UserId_seq", name = "UserIdSeq", initialValue=15)
    @GeneratedValue(generator = "UserIdSeq", strategy = GenerationType.SEQUENCE)
    private int tfUserId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TF_ROLE_ID")
    private TfRole tfRole;

    @Column(name = "TF_USERNAME", length = 20, unique = true)
    private String tfUserUsername;

    @Column(name = "TF_HASHPASSWORD", length = 200)
    private String tfHashpassword;

    @OneToOne(fetch = FetchType.LAZY, cascade = {CascadeType.ALL})
    @JoinColumn(name = "TF_ASSOCIATE_ID")
    private TfAssociate tfAssociate;

    public TfUser() {
    }

    public TfUser(int tfUserId) {
        this.tfUserId = tfUserId;
    }

    //Constructor for createAssociate which sets a role of 5.
    public TfUser(TfAssociate associate, String username, String password){
        this.tfAssociate = associate;
        this.tfUserUsername = username;
        this.tfHashpassword = password;
        this.tfRole = new TfRole(5);
    }

    public TfUser(int tfUserId, TfRole tfRole, String tfUserUsername, String tfUserHashpassword) {
        this.tfUserId = tfUserId;
        this.tfRole = tfRole;
        this.tfUserUsername = tfUserUsername;
        this.tfHashpassword = tfUserHashpassword;
    }

    public TfUser(Integer role, String username, String password) {
        this.tfRole = new TfRole(role);
        this.tfUserUsername = username;
        this.tfHashpassword = password;
    }

    // Overloaded method to aid creating new associate.
    public TfUser(String username, String password) {
        this.tfRole = new TfRole(5);
        this.tfAssociate = new TfAssociate();
        this.tfUserUsername = username;
        this.tfHashpassword = password;
    }


    /**
	 * @param tfUserId
	 * @param tfRole
	 * @param tfUserUsername
	 * @param tfHashpassword
	 * @param tfAssociate
	 */
	public TfUser(int tfUserId, TfRole tfRole, String tfUserUsername, String tfHashpassword, TfAssociate tfAssociate) {
		super();
		this.tfUserId = tfUserId;
		this.tfRole = tfRole;
		this.tfUserUsername = tfUserUsername;
		this.tfHashpassword = tfHashpassword;
		this.tfAssociate = tfAssociate;
	}

	public TfAssociate getTfAssociate() {
        return tfAssociate;
    }

    public void setTfAssociate(TfAssociate tfAssociate) {
        this.tfAssociate = tfAssociate;
    }

    public int getTfUserId() {
        return this.tfUserId;
    }

    public void setTfUserId(int tfUserId) {
        this.tfUserId = tfUserId;
    }

    public TfRole getTfRole() {
        return this.tfRole;
    }

    public void setTfRole(TfRole tfRole) {
        this.tfRole = tfRole;
    }


    public String getTfUserUsername() {
        return this.tfUserUsername;
    }

    public void setTfUserUsername(String tfUserUsername) {
        this.tfUserUsername = tfUserUsername;
    }

    public String getTfUserHashpassword() {
        return this.tfHashpassword;
    }

    public void setTfUserHashpassword(String tfUserHashpassword) {
        this.tfHashpassword = tfUserHashpassword;
    }
    
    public TfAssociate getTfUserAssociate() {
    	return this.tfAssociate;
    }
    
    public void setTfUserAssociate(TfAssociate tfAssociate) {
    	this.tfAssociate = tfAssociate;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((tfHashpassword == null) ? 0 : tfHashpassword.hashCode());
        result = prime * result + ((tfUserUsername == null) ? 0 : tfUserUsername.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TfUser)) return false;

        TfUser tfUser = (TfUser) o;

        if (tfUserId != tfUser.tfUserId) return false;
        if (tfRole != null ? !tfRole.equals(tfUser.tfRole) : tfUser.tfRole != null) return false;
        if (!tfUserUsername.equals(tfUser.tfUserUsername)) return false;
        if (!tfHashpassword.equals(tfUser.tfHashpassword)) return false;
        return tfAssociate != null ? tfAssociate.equals(tfUser.tfAssociate) : tfUser.tfAssociate == null;
    }
}
